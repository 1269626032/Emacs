;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Wed Jun 24 22:21:20 2020
;; Desktop file format version 208
;; Emacs version 25.2.2

;; Global section:
(setq desktop-saved-frameset [frameset 1 (24307 24928 388111 116000) (desktop . "208") "wyz@Jarvis" nil nil ((((font-backend xft x) (font . "-DAMA-Ubuntu Mono-normal-normal-normal-*-17-*-*-*-m-0-iso10646-1") (font-parameter . "Ubuntu Mono 13") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#eaeaea") (background-color . "#000000") (mouse-color . "black") (border-color . "#424242") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . dark) (cursor-color . "#d54e53") (sticky) (environment) (frameset--id . "A895-D5DE-36B1-B116") (frameset--mini t . t) (height . 35) (width . 80) (modeline . t) (minibuffer . t) (unsplittable) (left . 40) (top . 19) (icon-name) (visibility . t) (display . ":0") (explicit-name)) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 72) (min-pixel-width . 90) (min-pixel-height-ignore . 54) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 18) (min-pixel-width-safe . 18)) leaf (pixel-width . 736) (pixel-height . 612) (total-width . 81) (total-height . 34) (normal-height . 1.0) (normal-width . 1.0) (buffer "emacs.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 108) (start . 1))))])
(setq comint-input-ring nil)
(setq compile-history nil)
(setq desktop-missing-file-warning nil)
(setq dired-regexp-history nil)
(setq extended-command-history nil)
(setq face-name-history nil)
(setq file-name-history '("/home/wyz/opensource/Emacs/" "~/opensource/Emacs/emacs/emacs.org" "~/.emacs.d/custom.el" "/home/wyz/opensource/tsinghua/stinghua/‘Ç°‘ÈË‘µÄ‘¹¤‘×÷/main.tex" "/home/wyz/opensource/tsinghua/stinghua/‘Ç°‘ÈË‘µÄ‘¹¤‘×÷/ref.bib" "~/opensource/tsinghua/stinghua/‘Ç°‘ÈË‘µÄ‘¹¤‘×÷/main.tex" "~/.emacs.d/custom.el" "~/opensource/statistics-project/multivariate-statistics/‘×÷‘Òµ/regression-analysis.R" "~/.emacs.d/custom.el" "~/opensource/statistics-project/multivariate-statistics/‘×÷‘Òµ/discriminant-analysis.R" "~/.emacs.d/custom.el" "~/opensource/tsinghua/stinghua/‘Ç°‘ÈË‘µÄ‘¹¤‘×÷/main.tex" "~/.emacs.d/custom.el" "~/work/tsinghua/test.tex" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/main.tex" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/main.tex" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/main.tex" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/standard.sty" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/main.tex" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/scr/chap3.tex" "~/.emacs.d/custom.el" "~/opensource/dynamic-system/book/scr/chap2.tex" "~/.emacs.d/custom.el" "~/opensource/article/‘¶¯‘Á¦‘Ïµ‘Í³‘»ù‘´¡.tex" "~/.emacs.d/custom.el" "/home/wyz/opensource/article/" "~/opensource/article/‘¶¯‘Á¦‘Ïµ‘Í³‘»ù‘´¡.tex" "~/.emacs.d/custom.el" "~/opensource/article/‘¶¯‘Á¦‘Ïµ‘Í³‘»ù‘´¡.tex" "~/.emacs.d/custom.el" "~/opensource/article/‘¶¯‘Á¦‘Ïµ‘Í³‘»ù‘´¡.tex" "~/.emacs.d/custom.el" "~/opensource/article/‘¶¯‘Á¦‘Ïµ‘Í³‘»ù‘´¡.tex" "~/.emacs.d/custom.el" "~/work/tsinghua/test.tex" "~/.emacs.d/custom.el" "~/opensource/interview/private-enterprise/‘³É‘¶¼‘Íø‘À«‘ÐÅ‘Ï¢‘¼¼‘Êõ‘¹É‘·Ý‘ÓÐ‘ÏÞ‘¹«‘Ë¾.org" "~/.emacs.d/custom.el" "~/work/tsinghua/test.tex" "~/.emacs.d/custom.el" "~/opensource/scu-latex-template/README.md" "~/.emacs.d/custom.el" "~/work/test.tex" "~/.emacs.d/custom.el" "~/opensource/scu-latex-template/README.md" "~/.emacs.d/custom.el" "~/opensource/scu-latex-template/README.md" "~/.emacs.d/custom.el" "~/opensource/scu-latex-template/README.md" "~/.emacs.d/custom.el" "/home/wyz/Documents/lunwen/thesis/" "~/Documents/lunwen/thesis/main.tex" "/home/wyz/Documents/" "~/.emacs.d/custom.el" "~/Documents/lunwen/thesis/main.tex" "~/.emacs.d/custom.el" "~/opensource/computer-science/cosin/‘´ó‘½²‘ÌÃ/‘´º‘ËÉ‘¿Í‘·þ‘Ïî‘Ä¿‘Âä‘µØ‘£®org" "~/.emacs.d/custom.el" "~/opensource/computer-science/cosin/‘´ó‘½²‘ÌÃ/‘Èç‘ºÎ‘Ê¹‘ÓÃJava‘¿ª‘·¢‘ÖÇ‘ÄÜ‘¿Í‘·þ‘Ïµ‘Í³.org" "~/.emacs.d/custom.el" "~/opensource/computer-science/cosin/‘´ó‘½²‘ÌÃ/‘´º‘ËÉ‘¿Í‘·þ‘Ïî‘Ä¿‘Âä‘µØ‘£®org" "~/.emacs.d/custom.el" "~/opensource/computer-science/cosin/‘´ó‘½²‘ÌÃ/‘Èç‘ºÎ‘Ê¹‘ÓÃJava‘¿ª‘·¢‘ÖÇ‘ÄÜ‘¿Í‘·þ‘Ïµ‘Í³.org" "~/.emacs.d/custom.el" "~/opensource/computer-science/cosin/‘´ó‘½²‘ÌÃ/‘´º‘ËÉ‘¿Í‘·þ‘Ïî‘Ä¿‘Âä‘µØ‘£®org" "~/.emacs.d/custom.el" "~/opensource/computer-science/deep-learning/21project/test1.py" "~/.emacs.d/custom.el" "~/opensource/computer-science/‘´º‘ËÉ‘¿Í‘·þ‘Ïî‘Ä¿‘Éê‘Çë‘Êé.tex" "~/.emacs.d/custom.el" "/home/wyz/Desktop/‘Ëã‘·¨‘¹¤‘³Ì‘Ê¦/task/python‘ÖÆ‘×÷‘Êý‘¾Ý‘·Ö‘Îö‘¹¤‘¾ß.org" "/home/wyz/Desktop/‘Ëã‘·¨‘¹¤‘³Ì‘Ê¦/task/python‘ÖÆ‘×÷‘Êý‘¾Ý‘·Ö‘Îö‘¹¤‘¾ß.py" "/home/wyz/Desktop/‘Ëã‘·¨‘¹¤‘³Ì‘Ê¦/task/" "~/Desktop/‘Ëã‘·¨‘¹¤‘³Ì‘Ê¦/task/python‘ÖÆ‘×÷‘Êý‘¾Ý‘·Ö‘Îö‘¹¤‘¾ß.py" "~/.emacs.d/custom.el" "~/Desktop/‘Ëã‘·¨‘¹¤‘³Ì‘Ê¦/‘×Ô‘È»‘Óï‘ÑÔ‘´¦‘Àí/tensorflow.py" "~/.emacs.d/custom.el" "~/work/test1.c" "~/.emacs.d/custom.el" "~/Documents/lunwen/thesis/main.tex" "~/.emacs.d/custom.el" "~/Documents/lunwen/thesis/main.tex" "~/.emacs.d/custom.el" "~/opensource/wuhan2020/wuhan2020.github.io/i18n/zh-cn.js" "~/.emacs.d/custom.el" "~/opensource/wuhan2020/wuhan2020.github.io/blog/zh-cn/open-source3.md" "~/.emacs.d/custom.el" "~/.emacs.d/.bookmarks.el" "/home/wyz/opensource/wuhan2020/wuhan2020.github.io/blog/zh-cn/call-for-code.md" "~/opensource/wuhan2020/wuhan2020.github.io/blog/zh-cn/open-source3.md" "~/.emacs.d/custom.el" "~/Documents/lunwen/thesis/main.tex" "~/.emacs.d/custom.el" "~/Documents/doc/zhaogongzuo/pytorch-handbook/chapter1/1_tensor_tutorial.ipynb"))
(setq grep-find-history nil)
(setq grep-history nil)
(setq ivy-history '("frame" "eq:1" "open-source3.md" "call-for-code.md" "open-source3.md" "call-for-code.md" "open-source3.md" "call-for-code.md" "open-source3.md" "call-for-code.md" "open-source3.md" "call-for-code.md" "open-source3.md" "open-source-universities.md" "wuhan2020-plan.md" "open-source-universities.md" "wuhan2020-plan.md" "open-source-universities.md" "summer-2020-coming.md" "summer-2020-activity.md" "call-for-code.md" "summer-2020-activity.md" "zh-cn.js" "shimo-wuhan2020.md" "zh-cn.js" "zh-cn" "shimo-wuhan2020.md" "call-for-code.md" "shimo-wuhan2020.md" "call-for-code.md" "shimo-wuhan2020.md" "call-for-code.md" "shimo-wuhan2020.md" "zh-cn" "*Ibuffer*" "summer-2020.md" "youth-day.md" "*Ibuffer*" "summer-2020.md" "youth-day.md" "call-for-code.md" "youth-day.md" "use" "sec:" "subsubsection" "subsubsection" "subsubsection" "main.tex" "coronavirus-battle.md" "white-paper.md" "coronavirus-battle.md" "white-paper.md" "coronavirus-battle.md" "white-paper.md" "coronavirus-battle.md" "white-paper.md" "*R:wyz*" "*Backtrace*" "*R:wyz*" "huawei.r" "test" "huawei.r" "test2.r" "stdin()" "readline" "test2.r" "*R:wyz*" "test2.r" "test.r" "*R:wyz*" "test.r" "pingduoduo.r" "wh-opensource-service-cn.md" "wuhan2020-plan.md" "wh-opensource-service-cn.md" "wuhan2020-plan.md" "wh-opensource-service-cn.md" "call-for-code.md" "wh-opensource-service-cn.md" "wuhan2020-anti-epidemic.md" "wuhan2020-plan.md" "wuhan2020-anti-epidemic.md" "wuhan2020-plan.md" "wuhan2020-anti-epidemic.md" "opensource-free-air.md" "logo-opensouce-tju.md" "wuhan2020-plan.md" "logo-opensouce-tju.md" "wuhan2020-plan.md" "logo-opensouce-tju.md" "call-for-code.md" "wuhan2020-plan.md" "call-for-code.md" "wuhan2020-plan.md" "call-for-code.md" "wuhan2020-plan.md" "call-for-code.md" "article" "lypunov.mac" "ee"))
(setq minibuffer-history '("316" "302" "410" "77" "67" "y" "162" "163" "183" "‘¼Æ‘Ëã‘Áë‘»Ø‘¹é‘µÄ‘·½‘·¨" "‘Áë‘¹À‘¼Æ" "‘Áì‘¹À‘¼Æ" "‘¸´‘¹²‘Ïß‘ÐÔ" "668" "688" "658" "398" "TeX-evince-sync-view" "20" "c" "23" "16" "23" "18" "9" "577" "676" "658" "621" "588" "585" "551" "530" "512" "501" "jjj" "156" "157" "9" "8" "7" "6" "5" "{4}" "1751" "1" "10000" "1" "10000" "158"))
(setq org-clock-history nil)
(setq org-refile-history nil)
(setq org-tags-history nil)
(setq query-replace-history '(" " "\\textasciitilde{}" "section" "subsection" "section" "subsection" "wuhan2020" "\\beta" "\\rm B" "dvdt1" "dy222" "dudt1" "dudt" "dudt1" "dy111" "center" "table" "$E_8$" "E8" "$E_7$" "E7" "$E_6$" "E6" " " "\\right" " " "\\left" "E" "E7" "coeff" "ratcoef" "simplify" "ratsimp" ":=" ":" "\\RR" "\\mathbf{R}" "\\RR" "\\mathbf{R}"))
(setq read-expression-history '("ess\nc-guess\ness-dirs\ness-help (ess-display-help-on-object)\ness-quit\ness-yank\ness-abort\ness-r-sos\ness-watch\ness-bp-set"))
(setq regexp-history nil)
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq search-ring '("ser" "mathscr" "awk" "table" "col" "‘Á½‘±ß‘Í¨‘É£‘¼ª" "‘µ±‘Ç°" "\\textas" "‘°²‘×°‘»ú‘Æ÷" "lis" "‘¹¹‘½¨" "section" "‘·Ö‘Àë" "c" "plot" "‘´Ó‘¶ø"))
(setq shell-command-history '("ks"))
(setq tags-file-name nil)
(setq tags-table-list nil)

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/wyz/opensource/Emacs/emacs/emacs.org"
  "emacs.org"
  'org-mode
  '(immortal-scratch-mode auto-compile-on-load-mode projectile-mode diff-hl-mode whitespace-cleanup-mode guide-key-mode hes-mode whole-line-or-region-local-mode page-break-lines-mode beacon-mode global-auto-revert-mode company-mode ivy-mode counsel-mode flycheck-mode anzu-mode)
  108
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (buffer-file-coding-system . utf-8-unix) (truncate-lines . t))
  '((mark-ring nil)))

